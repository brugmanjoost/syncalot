const getDefault = require('./functions/getDefault.js');

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Class:       AggregatorCallbacks
//
// Description: This class calls a callback function for each detection by the synchroniser.
///
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
module.exports = class AggregatorCallbacks extends require('events') {

    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    //
    // Function:    constructor
    //
    // Description: This class calls a callback function for each detection by the synchroniser.
    //
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    constructor(joiner, options) {
        super();
        this._onOuterLeft = options.onOuterLeft;
        this._onOuterRight = options.onOuterRight;
        this._onInner = options.onInner;
    }

    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    //
    // Function:    onOuterLeft
    //
    // Description: Called if an id exists in set1 but not in set2.
    //
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    onOuterLeft(commonId, id1, item1) {
        if (this._onOuterLeft)
            this._onOuterLeft(commonId, id1, item1);
    }

    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    //
    // Function:    onOuterRight
    //
    // Description: Called if an id exists in set2 but not in set1.
    //
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    onOuterRight(commonId, id2, item2) {
        if (this._onOuterRight)
            this._onOuterRight(commonId, id2, item2);
    }

    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    //
    // Function:    onInner
    //
    // Description: Called if an id exists both sets.
    //
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    onInner(commonId, id1, item1, id2, item2) {
        if (this._onInner)
            this._onInner(commonId, id1, item1, id2, item2);
    }
}
